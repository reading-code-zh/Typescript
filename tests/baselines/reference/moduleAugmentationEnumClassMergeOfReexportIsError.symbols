=== tests/cases/compiler/file.ts ===
export class Foo {
>Foo : Symbol(Foo, Decl(file.ts, 0, 0))

    member: string;
>member : Symbol(Foo.member, Decl(file.ts, 0, 18))
}
=== tests/cases/compiler/reexport.ts ===

export * from "./file";
=== tests/cases/compiler/augment.ts ===
import * as ns from "./reexport";
>ns : Symbol(ns, Decl(augment.ts, 0, 6))

declare module "./reexport" {
>"./reexport" : Symbol(ns, Decl(reexport.ts, 0, 0), Decl(augment.ts, 0, 33))

    export enum Foo {
>Foo : Symbol(Foo, Decl(augment.ts, 2, 29))

        A, B, C
>A : Symbol(Foo.A, Decl(augment.ts, 3, 21))
>B : Symbol(Foo.B, Decl(augment.ts, 4, 10))
>C : Symbol(Foo.C, Decl(augment.ts, 4, 13))
    }
}

declare const f: ns.Foo; //is this the enum or the class? should be an error.
>f : Symbol(f, Decl(augment.ts, 8, 13))
>ns : Symbol(ns, Decl(augment.ts, 0, 6))
>Foo : Symbol(ns.Foo, Decl(augment.ts, 2, 29))

