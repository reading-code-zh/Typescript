=== tests/cases/compiler/narrowingOrderIndependent.ts ===
// Repro from #36709

class A {
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))

    constructor(public stringOrUndefined: string | undefined) {}
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
}

class B {
>B : Symbol(B, Decl(narrowingOrderIndependent.ts, 4, 1))

    constructor(public str: string) {}
>str : Symbol(B.str, Decl(narrowingOrderIndependent.ts, 7, 16))
}

const a = new A("123");
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))

if (a instanceof A && a.stringOrUndefined) {
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))

    new B(a.stringOrUndefined)
>B : Symbol(B, Decl(narrowingOrderIndependent.ts, 4, 1))
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
}

if (a.stringOrUndefined && a instanceof A) {
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))

    new B(a.stringOrUndefined)
>B : Symbol(B, Decl(narrowingOrderIndependent.ts, 4, 1))
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
}

if (a instanceof A) {
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))

    if (a.stringOrUndefined) {
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))

        new B(a.stringOrUndefined)
>B : Symbol(B, Decl(narrowingOrderIndependent.ts, 4, 1))
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
    }
}

if (a.stringOrUndefined) {
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))

    if (a instanceof A) {
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>A : Symbol(A, Decl(narrowingOrderIndependent.ts, 0, 0))

        new B(a.stringOrUndefined)
>B : Symbol(B, Decl(narrowingOrderIndependent.ts, 4, 1))
>a.stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
>a : Symbol(a, Decl(narrowingOrderIndependent.ts, 10, 5))
>stringOrUndefined : Symbol(A.stringOrUndefined, Decl(narrowingOrderIndependent.ts, 3, 16))
    }
}

