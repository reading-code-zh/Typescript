=== tests/cases/conformance/types/thisType/thisTypeInTaggedTemplateCall.ts ===
class Foo {
>Foo : Symbol(Foo, Decl(thisTypeInTaggedTemplateCall.ts, 0, 0))

    static m<T>(this: new () => T, strings: TemplateStringsArray | string) {
>m : Symbol(Foo.m, Decl(thisTypeInTaggedTemplateCall.ts, 0, 11))
>T : Symbol(T, Decl(thisTypeInTaggedTemplateCall.ts, 1, 13))
>this : Symbol(this, Decl(thisTypeInTaggedTemplateCall.ts, 1, 16))
>T : Symbol(T, Decl(thisTypeInTaggedTemplateCall.ts, 1, 13))
>strings : Symbol(strings, Decl(thisTypeInTaggedTemplateCall.ts, 1, 34))
>TemplateStringsArray : Symbol(TemplateStringsArray, Decl(lib.es5.d.ts, --, --))

        return new this()
>this : Symbol(this, Decl(thisTypeInTaggedTemplateCall.ts, 1, 16))
    }
}

Foo.m`test`;
>Foo.m : Symbol(Foo.m, Decl(thisTypeInTaggedTemplateCall.ts, 0, 11))
>Foo : Symbol(Foo, Decl(thisTypeInTaggedTemplateCall.ts, 0, 0))
>m : Symbol(Foo.m, Decl(thisTypeInTaggedTemplateCall.ts, 0, 11))

(Foo.m)`test`;
>Foo.m : Symbol(Foo.m, Decl(thisTypeInTaggedTemplateCall.ts, 0, 11))
>Foo : Symbol(Foo, Decl(thisTypeInTaggedTemplateCall.ts, 0, 0))
>m : Symbol(Foo.m, Decl(thisTypeInTaggedTemplateCall.ts, 0, 11))

