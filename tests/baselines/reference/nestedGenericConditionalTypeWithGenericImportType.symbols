=== tests/cases/compiler/name.ts ===
// #31824

export type Name<T> = any;
>Name : Symbol(Name, Decl(name.ts, 0, 0))
>T : Symbol(T, Decl(name.ts, 2, 17))

=== tests/cases/compiler/index.ts ===
type T<X> = any extends ((any extends any ? any : string) extends any ? import("./name").Name<X> : any)
>T : Symbol(T, Decl(index.ts, 0, 0))
>X : Symbol(X, Decl(index.ts, 0, 7))
>Name : Symbol(Name, Decl(name.ts, 0, 0))
>X : Symbol(X, Decl(index.ts, 0, 7))

  ? any
  : any;

