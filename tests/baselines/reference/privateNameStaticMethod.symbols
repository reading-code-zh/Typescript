=== tests/cases/conformance/classes/members/privateNames/privateNameStaticMethod.ts ===
class A1 {
>A1 : Symbol(A1, Decl(privateNameStaticMethod.ts, 0, 0))

    static #method(param: string): string {
>#method : Symbol(A1.#method, Decl(privateNameStaticMethod.ts, 0, 10))
>param : Symbol(param, Decl(privateNameStaticMethod.ts, 1, 19))

        return "";
    }
    constructor() {
        A1.#method("")
>A1.#method : Symbol(A1.#method, Decl(privateNameStaticMethod.ts, 0, 10))
>A1 : Symbol(A1, Decl(privateNameStaticMethod.ts, 0, 0))

        A1.#method(1) // Error
>A1.#method : Symbol(A1.#method, Decl(privateNameStaticMethod.ts, 0, 10))
>A1 : Symbol(A1, Decl(privateNameStaticMethod.ts, 0, 0))

        A1.#method()  // Error 
>A1.#method : Symbol(A1.#method, Decl(privateNameStaticMethod.ts, 0, 10))
>A1 : Symbol(A1, Decl(privateNameStaticMethod.ts, 0, 0))

    }
}

