=== tests/cases/conformance/types/typeParameters/typeParameterLists/typeParametersAvailableInNestedScope3.ts ===
function foo<T>(v: T) {
>foo : <T>(v: T) => { a: <T>(a: T) => T; b: () => T; c: <T>(v: T) => { a: <T>(a: T) => T; b: () => T; }; }
>v : T

    function a<T>(a: T) { return a; }
>a : <T>(a: T) => T
>a : T
>a : T

    function b(): T { return v; }
>b : () => T
>v : T

    function c<T>(v: T) {
>c : <T>(v: T) => { a: <T>(a: T) => T; b: () => T; }
>v : T

        function a<T>(a: T) { return a; }
>a : <T>(a: T) => T
>a : T
>a : T

        function b(): T { return v; }
>b : () => T
>v : T

        return { a, b };
>{ a, b } : { a: <T>(a: T) => T; b: () => T; }
>a : <T>(a: T) => T
>b : () => T
    }

    return { a, b, c };
>{ a, b, c } : { a: <T>(a: T) => T; b: () => T; c: <T>(v: T) => { a: <T>(a: T) => T; b: () => T; }; }
>a : <T>(a: T) => T
>b : () => T
>c : <T>(v: T) => { a: <T>(a: T) => T; b: () => T; }
}

