=== /a.ts ===
export class A { a!: string }
>A : Symbol(A, Decl(a.ts, 0, 0))
>a : Symbol(A.a, Decl(a.ts, 0, 16))

=== /b.ts ===
import type { A } from './a';
>A : Symbol(A, Decl(b.ts, 0, 13))

declare class B extends A {}
>B : Symbol(B, Decl(b.ts, 0, 29))
>A : Symbol(A, Decl(b.ts, 0, 13))

declare namespace ns {
>ns : Symbol(ns, Decl(b.ts, 1, 28))

  class C extends A {}
>C : Symbol(C, Decl(b.ts, 2, 22))
>A : Symbol(A, Decl(b.ts, 0, 13))
}

