=== tests/cases/compiler/contextuallyTypedGenericAssignment.ts ===
function foo<A extends any[]>(
>foo : Symbol(foo, Decl(contextuallyTypedGenericAssignment.ts, 0, 0))
>A : Symbol(A, Decl(contextuallyTypedGenericAssignment.ts, 0, 13))

    arg: <T extends { a: number }>(t: T, ...rest: A) => number
>arg : Symbol(arg, Decl(contextuallyTypedGenericAssignment.ts, 0, 30))
>T : Symbol(T, Decl(contextuallyTypedGenericAssignment.ts, 1, 10))
>a : Symbol(a, Decl(contextuallyTypedGenericAssignment.ts, 1, 21))
>t : Symbol(t, Decl(contextuallyTypedGenericAssignment.ts, 1, 35))
>T : Symbol(T, Decl(contextuallyTypedGenericAssignment.ts, 1, 10))
>rest : Symbol(rest, Decl(contextuallyTypedGenericAssignment.ts, 1, 40))
>A : Symbol(A, Decl(contextuallyTypedGenericAssignment.ts, 0, 13))

) { }

foo((t, u: number) => t.a)
>foo : Symbol(foo, Decl(contextuallyTypedGenericAssignment.ts, 0, 0))
>t : Symbol(t, Decl(contextuallyTypedGenericAssignment.ts, 4, 5))
>u : Symbol(u, Decl(contextuallyTypedGenericAssignment.ts, 4, 7))
>t.a : Symbol(a, Decl(contextuallyTypedGenericAssignment.ts, 1, 21))
>t : Symbol(t, Decl(contextuallyTypedGenericAssignment.ts, 4, 5))
>a : Symbol(a, Decl(contextuallyTypedGenericAssignment.ts, 1, 21))

