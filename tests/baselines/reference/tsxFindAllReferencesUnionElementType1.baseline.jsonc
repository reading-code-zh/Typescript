// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// function SFC1(prop: { x: number }) {
//     return <div>hello </div>;
// };
// function SFC2(prop: { x: boolean }) {
//     return <h1>World </h1>;
// }
// /*FIND ALL REFS*/var [|SFCComp|] = SFC1 || SFC2;
// <[|SFCComp|] x={ "hi" } />

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file.tsx",
      "kind": "var",
      "name": "var SFCComp: ((prop: {\n    x: number;\n}) => JSX.Element) | ((prop: {\n    x: boolean;\n}) => JSX.Element)",
      "textSpan": {
        "start": 282,
        "length": 7
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "SFCComp",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 278,
        "length": 27
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 282,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 278,
          "length": 27
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 307,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 306,
          "length": 22
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// function SFC1(prop: { x: number }) {
//     return <div>hello </div>;
// };
// function SFC2(prop: { x: boolean }) {
//     return <h1>World </h1>;
// }
// var /*FIND ALL REFS*/[|SFCComp|] = SFC1 || SFC2;
// <[|SFCComp|] x={ "hi" } />

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file.tsx",
      "kind": "var",
      "name": "var SFCComp: ((prop: {\n    x: number;\n}) => JSX.Element) | ((prop: {\n    x: boolean;\n}) => JSX.Element)",
      "textSpan": {
        "start": 282,
        "length": 7
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "SFCComp",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 278,
        "length": 27
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 282,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 278,
          "length": 27
        },
        "isWriteAccess": true,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 307,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 306,
          "length": 22
        },
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

undefined

// === /tests/cases/fourslash/file.tsx ===
// declare module JSX {
//     interface Element { }
//     interface IntrinsicElements {
//     }
//     interface ElementAttributesProperty { props; }
// }
// function SFC1(prop: { x: number }) {
//     return <div>hello </div>;
// };
// function SFC2(prop: { x: boolean }) {
//     return <h1>World </h1>;
// }
// var [|SFCComp|] = SFC1 || SFC2;
// </*FIND ALL REFS*/[|SFCComp|] x={ "hi" } />

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/file.tsx",
      "kind": "var",
      "name": "var SFCComp: ((prop: {\n    x: number;\n}) => JSX.Element) | ((prop: {\n    x: boolean;\n}) => JSX.Element)",
      "textSpan": {
        "start": 282,
        "length": 7
      },
      "displayParts": [
        {
          "text": "var",
          "kind": "keyword"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "SFCComp",
          "kind": "localName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "number",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "|",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "prop",
          "kind": "parameterName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "{",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "    ",
          "kind": "space"
        },
        {
          "text": "x",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        },
        {
          "text": ";",
          "kind": "punctuation"
        },
        {
          "text": "\n",
          "kind": "lineBreak"
        },
        {
          "text": "}",
          "kind": "punctuation"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "=>",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "JSX",
          "kind": "moduleName"
        },
        {
          "text": ".",
          "kind": "punctuation"
        },
        {
          "text": "Element",
          "kind": "interfaceName"
        },
        {
          "text": ")",
          "kind": "punctuation"
        }
      ],
      "contextSpan": {
        "start": 278,
        "length": 27
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 282,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 278,
          "length": 27
        },
        "isWriteAccess": true
      },
      {
        "textSpan": {
          "start": 307,
          "length": 7
        },
        "fileName": "/tests/cases/fourslash/file.tsx",
        "contextSpan": {
          "start": 306,
          "length": 22
        },
        "isWriteAccess": false
      }
    ]
  }
]