=== tests/cases/compiler/deeplyNestedConditionalTypes.ts ===
type Foo<T> =
>Foo : Symbol(Foo, Decl(deeplyNestedConditionalTypes.ts, 0, 0))
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 0 ? '0' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 1 ? '1' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 2 ? '2' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 3 ? '3' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 4 ? '4' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 5 ? '5' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 6 ? '6' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 7 ? '7' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 8 ? '8' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 9 ? '9' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 10 ? '10' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 11 ? '11' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 12 ? '12' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 13 ? '13' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 14 ? '14' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 15 ? '15' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 16 ? '16' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 17 ? '17' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 18 ? '18' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 19 ? '19' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 20 ? '20' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 21 ? '21' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 22 ? '22' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 23 ? '23' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 24 ? '24' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 25 ? '25' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 26 ? '26' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 27 ? '27' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 28 ? '28' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 29 ? '29' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 30 ? '30' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 31 ? '31' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 32 ? '32' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 33 ? '33' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 34 ? '34' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 35 ? '35' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 36 ? '36' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 37 ? '37' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 38 ? '38' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 39 ? '39' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 40 ? '40' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 41 ? '41' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 42 ? '42' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 43 ? '43' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 44 ? '44' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 45 ? '45' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 46 ? '46' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 47 ? '47' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 48 ? '48' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 49 ? '49' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 50 ? '50' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 51 ? '51' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 52 ? '52' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 53 ? '53' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 54 ? '54' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 55 ? '55' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 56 ? '56' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 57 ? '57' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 58 ? '58' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 59 ? '59' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 60 ? '60' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 61 ? '61' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 62 ? '62' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 63 ? '63' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 64 ? '64' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 65 ? '65' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 66 ? '66' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 67 ? '67' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 68 ? '68' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 69 ? '69' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 70 ? '70' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 71 ? '71' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 72 ? '72' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 73 ? '73' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 74 ? '74' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 75 ? '75' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 76 ? '76' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 77 ? '77' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 78 ? '78' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 79 ? '79' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 80 ? '80' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 81 ? '81' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 82 ? '82' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 83 ? '83' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 84 ? '84' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 85 ? '85' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 86 ? '86' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 87 ? '87' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 88 ? '88' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 89 ? '89' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 90 ? '90' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 91 ? '91' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 92 ? '92' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 93 ? '93' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 94 ? '94' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 95 ? '95' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 96 ? '96' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 97 ? '97' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 98 ? '98' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    T extends 99 ? '99' :
>T : Symbol(T, Decl(deeplyNestedConditionalTypes.ts, 0, 9))

    never;

type T0 = Foo<99>;
>T0 : Symbol(T0, Decl(deeplyNestedConditionalTypes.ts, 101, 10))
>Foo : Symbol(Foo, Decl(deeplyNestedConditionalTypes.ts, 0, 0))

type T1 = Foo<any>;
>T1 : Symbol(T1, Decl(deeplyNestedConditionalTypes.ts, 103, 18))
>Foo : Symbol(Foo, Decl(deeplyNestedConditionalTypes.ts, 0, 0))

