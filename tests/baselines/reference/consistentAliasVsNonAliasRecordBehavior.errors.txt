tests/cases/compiler/consistentAliasVsNonAliasRecordBehavior.ts(18,5): error TS2741: Property 'a' is missing in type 'Record<string, string>' but required in type 'Record2<"a", string>'.
tests/cases/compiler/consistentAliasVsNonAliasRecordBehavior.ts(22,5): error TS2741: Property 'a' is missing in type 'Record2<string, string>' but required in type 'Record<"a", string>'.
tests/cases/compiler/consistentAliasVsNonAliasRecordBehavior.ts(34,5): error TS2741: Property 'a' is missing in type 'Record<string, T>' but required in type 'Record2<"a", T>'.
tests/cases/compiler/consistentAliasVsNonAliasRecordBehavior.ts(38,5): error TS2741: Property 'a' is missing in type 'Record2<string, T>' but required in type 'Record<"a", T>'.


==== tests/cases/compiler/consistentAliasVsNonAliasRecordBehavior.ts (4 errors) ====
    // TODO: FIXME: All the below cases labeled `no error` _should be an error_, and are only prevented from so being
    // by incorrect variance-based relationships
    // Ref: https://github.com/Microsoft/TypeScript/issues/29698
    
    type Record2<K extends keyof any, T> = {
        [P in K]: T;
    };
    
    function defaultRecord(x: Record<'a', string>, y: Record<string, string>) {
        x = y; // no error, but error expected.
    }
    
    function customRecord(x: Record2<'a', string>, y: Record2<string, string>) {
        x = y; // no error, but error expected.
    }
    
    function mixed1(x: Record2<'a', string>, y: Record<string, string>) {
        x = y; // error
        ~
!!! error TS2741: Property 'a' is missing in type 'Record<string, string>' but required in type 'Record2<"a", string>'.
    }
    
    function mixed2(x: Record<'a', string>, y: Record2<string, string>) {
        x = y; // error
        ~
!!! error TS2741: Property 'a' is missing in type 'Record2<string, string>' but required in type 'Record<"a", string>'.
    }
    
    function defaultRecord2<T>(x: Record<'a', T>, y: Record<string, T>) {
        x = y; // no error, but error expected.
    }
    
    function customRecord2<T>(x: Record2<'a', T>, y: Record2<string, T>) {
        x = y; // no error, but error expected.
    }
    
    function mixed3<T>(x: Record2<'a', T>, y: Record<string, T>) {
        x = y; // error
        ~
!!! error TS2741: Property 'a' is missing in type 'Record<string, T>' but required in type 'Record2<"a", T>'.
    }
    
    function mixed4<T>(x: Record<'a', T>, y: Record2<string, T>) {
        x = y; // error
        ~
!!! error TS2741: Property 'a' is missing in type 'Record2<string, T>' but required in type 'Record<"a", T>'.
    }
    