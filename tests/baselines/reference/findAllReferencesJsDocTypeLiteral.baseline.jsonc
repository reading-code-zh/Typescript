// === /tests/cases/fourslash/foo.js ===
// /**
//  * @param {object} o - very important!
//  * @param {string} o.x - a thing, its ok
//  * @param {number} o.y - another thing
//  * @param {Object} o.nested - very nested
//  * @param {boolean} o.nested./*FIND ALL REFS*/[|great|] - much greatness
//  * @param {number} o.nested.times - twice? probably!??
//  */
//  function f(o) { return o.nested.[|great|]; }

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/foo.js",
      "kind": "property",
      "name": "(property) great: boolean",
      "textSpan": {
        "start": 194,
        "length": 5
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "great",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 168,
        "length": 52
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 194,
          "length": 5
        },
        "fileName": "/tests/cases/fourslash/foo.js",
        "isWriteAccess": false,
        "isDefinition": true
      },
      {
        "textSpan": {
          "start": 309,
          "length": 5
        },
        "fileName": "/tests/cases/fourslash/foo.js",
        "isWriteAccess": false,
        "isDefinition": false
      }
    ]
  }
]

// === /tests/cases/fourslash/foo.js ===
// /**
//  * @param {object} o - very important!
//  * @param {string} o.x - a thing, its ok
//  * @param {number} o.y - another thing
//  * @param {Object} o.nested - very nested
//  * @param {boolean} o.nested.[|great|] - much greatness
//  * @param {number} o.nested.times - twice? probably!??
//  */
//  function f(o) { return o.nested./*FIND ALL REFS*/[|great|]; }

[
  {
    "definition": {
      "containerKind": "",
      "containerName": "",
      "fileName": "/tests/cases/fourslash/foo.js",
      "kind": "property",
      "name": "(property) great: boolean",
      "textSpan": {
        "start": 194,
        "length": 5
      },
      "displayParts": [
        {
          "text": "(",
          "kind": "punctuation"
        },
        {
          "text": "property",
          "kind": "text"
        },
        {
          "text": ")",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "great",
          "kind": "propertyName"
        },
        {
          "text": ":",
          "kind": "punctuation"
        },
        {
          "text": " ",
          "kind": "space"
        },
        {
          "text": "boolean",
          "kind": "keyword"
        }
      ],
      "contextSpan": {
        "start": 168,
        "length": 52
      }
    },
    "references": [
      {
        "textSpan": {
          "start": 194,
          "length": 5
        },
        "fileName": "/tests/cases/fourslash/foo.js",
        "isWriteAccess": false
      },
      {
        "textSpan": {
          "start": 309,
          "length": 5
        },
        "fileName": "/tests/cases/fourslash/foo.js",
        "isWriteAccess": false
      }
    ]
  }
]