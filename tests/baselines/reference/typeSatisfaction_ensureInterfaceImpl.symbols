=== tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_ensureInterfaceImpl.ts ===
type Movable = {
>Movable : Symbol(Movable, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 0, 0))

    move(distance: number): void;
>move : Symbol(move, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 0, 16))
>distance : Symbol(distance, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 1, 9))

};

const car = {
>car : Symbol(car, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 4, 5))

    start() { },
>start : Symbol(start, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 4, 13))

    move(d) {
>move : Symbol(move, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 5, 16))
>d : Symbol(d, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 6, 9))

        // d should be number
    },
    stop() { }
>stop : Symbol(stop, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 8, 6))

} satisfies Movable & Record<string, unknown>;
>Movable : Symbol(Movable, Decl(typeSatisfaction_ensureInterfaceImpl.ts, 0, 0))
>Record : Symbol(Record, Decl(lib.es5.d.ts, --, --))

