=== tests/cases/compiler/ConstEnum.ts ===
export const enum MyConstEnum {
>MyConstEnum : MyConstEnum

    Foo,
>Foo : MyConstEnum.Foo

    Bar
>Bar : MyConstEnum.Bar

};
=== tests/cases/compiler/ImportExport.ts ===
import { MyConstEnum } from './ConstEnum';
>MyConstEnum : typeof MyConstEnum

export { MyConstEnum };
>MyConstEnum : typeof MyConstEnum

=== tests/cases/compiler/ImportExportDefault.ts ===
import { MyConstEnum } from './ConstEnum';
>MyConstEnum : typeof MyConstEnum

export default MyConstEnum;
>MyConstEnum : MyConstEnum

=== tests/cases/compiler/ReExportDefault.ts ===
export { MyConstEnum as default } from './ConstEnum';
>MyConstEnum : typeof import("tests/cases/compiler/ConstEnum").MyConstEnum
>default : typeof import("tests/cases/compiler/ConstEnum").MyConstEnum

=== tests/cases/compiler/ReExport.ts ===
export { MyConstEnum } from './ConstEnum';
>MyConstEnum : typeof import("tests/cases/compiler/ConstEnum").MyConstEnum

=== tests/cases/compiler/Usage1.ts ===
import MyConstEnum1 from './ImportExportDefault';
>MyConstEnum1 : typeof MyConstEnum1

import MyConstEnum2 from './ReExportDefault';
>MyConstEnum2 : typeof MyConstEnum1

MyConstEnum1.Foo;
>MyConstEnum1.Foo : MyConstEnum1.Foo
>MyConstEnum1 : typeof MyConstEnum1
>Foo : MyConstEnum1.Foo

MyConstEnum2.Foo;
>MyConstEnum2.Foo : MyConstEnum1.Foo
>MyConstEnum2 : typeof MyConstEnum1
>Foo : MyConstEnum1.Foo

=== tests/cases/compiler/Usage2.ts ===
import { MyConstEnum } from './ImportExport';
>MyConstEnum : typeof MyConstEnum

MyConstEnum.Foo;
>MyConstEnum.Foo : MyConstEnum.Foo
>MyConstEnum : typeof MyConstEnum
>Foo : MyConstEnum.Foo

=== tests/cases/compiler/Usage3.ts ===
import { MyConstEnum } from './ReExport';
>MyConstEnum : typeof MyConstEnum

MyConstEnum.Foo;
>MyConstEnum.Foo : MyConstEnum.Foo
>MyConstEnum : typeof MyConstEnum
>Foo : MyConstEnum.Foo

