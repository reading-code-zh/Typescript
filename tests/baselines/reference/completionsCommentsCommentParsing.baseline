[
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 1915,
      "name": "18"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1915,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "first number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "second number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 1924,
      "name": "15"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 1924,
        "length": 3
      },
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "arrayLength",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "2",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overloads",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pattern",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 2361,
      "name": "24"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 2361,
        "length": 4
      },
      "entries": [
        {
          "name": "aOrb",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "aOrb",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "opt",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "opt",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "optional parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "opt",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "optional parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 2390,
      "name": "27"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 3874,
      "name": "39"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 3874,
        "length": 1
      },
      "entries": [
        {
          "name": "a",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is inline comment for a",
              "kind": "text"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "it is first parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "arguments",
          "kind": "local var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "local var",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "arguments",
              "kind": "propertyName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "IArguments",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "b",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is inline comment for b",
              "kind": "text"
            }
          ]
        },
        {
          "name": "c",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "it is third parameter",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "d",
          "kind": "parameter",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "parameter",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 3891,
      "name": "44"
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "optionalReplacementSpan": {
        "start": 3891,
        "length": 14
      },
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "arrayLength",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "2",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overloads",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "...",
              "kind": "punctuation"
            },
            {
              "text": "args",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "[",
              "kind": "punctuation"
            },
            {
              "text": "]",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "pattern",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "value",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "message",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  {
    "marker": {
      "fileName": "/tests/cases/fourslash/completionsCommentsCommentParsing.ts",
      "position": 4841,
      "name": ""
    },
    "completionList": {
      "flags": 0,
      "isGlobalCompletion": true,
      "isMemberCompletion": false,
      "isNewIdentifierLocation": false,
      "entries": [
        {
          "name": "divide",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "divide",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is divide function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is a",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } g this is optional param g",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "f1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "+",
              "kind": "operator"
            },
            {
              "text": "1",
              "kind": "numericLiteral"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "overload",
              "kind": "text"
            },
            {
              "text": ")",
              "kind": "punctuation"
            }
          ],
          "documentation": [
            {
              "text": "fn f1 with number",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "about b",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "fooBar",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "fooBar",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "foo",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "bar",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Function returns string concat of foo and bar",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "foo",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is string",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "bar",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "is second string",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\nAnd properly aligned comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocCommentAlignmentTest3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocCommentAlignmentTest3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is function comment\n    And aligned with 4 space char margin",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about a\nspanning on two lines and aligned perfectly",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nspanning on two lines and aligned perfectly\nspanning one more line alined perfectly\n    spanning another line with more margin",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is info about b\nnot aligned text about parameter will eat only one space",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocMixedComments1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "* triplestar jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments4",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments4",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments5",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments5",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "another jsDocComment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMixedComments6",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMixedComments6",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "jsdoc comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is multiple line jsdoc stule comment\nNew line1\nNew Line2",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocMultiLineMerge",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocMultiLineMerge",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Another this one too",
              "kind": "text"
            }
          ]
        },
        {
          "name": "jsDocParamTest",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocParamTest",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is jsdoc style function with param tag as well as inline parameter help",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is first parameter",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "it is third parameter",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "jsDocSingleLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "jsDocSingleLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is eg of single line jsdoc style comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "multiLine",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiLine",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "multiply",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "multiply",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is multiplication function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "LastParam",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "anotherTag"
            }
          ]
        },
        {
          "name": "noHelpComment1",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment1",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment2",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment2",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "noHelpComment3",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "noHelpComment3",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "NoQuickInfoClass",
          "kind": "class",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NoQuickInfoClass",
              "kind": "className"
            }
          ],
          "documentation": []
        },
        {
          "name": "simple",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "simple",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "square",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "square",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "this is square function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "paramTag",
              "text": [
                {
                  "text": "{ number } a this is input number of paramTag",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is input number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "returnType",
              "text": [
                {
                  "text": "{ number } it is return type",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "subtract",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "subtract",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "c",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "d",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "e",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "f",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "=>",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "void",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is subtract function",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is about b",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "c",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param c",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "d",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param d",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "e",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "this is optional param e",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "{ () => string; } } f this is optional param f",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "sum",
          "kind": "function",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "sum",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "a",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "b",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Adds two integers and returns the result",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "a",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "first number",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "b",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "second number",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "x",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "x",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "y",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "11",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "y",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "This is a comment",
              "kind": "text"
            }
          ]
        },
        {
          "name": "abstract",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "abstract",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "any",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "any",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": "<",
              "kind": "punctuation"
            },
            {
              "text": "T",
              "kind": "typeParameterName"
            },
            {
              "text": ">",
              "kind": "punctuation"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "ArrayBuffer",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBuffer",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ArrayBufferConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Represents a raw buffer of binary data, which is used to store data for the\r\ndifferent typed arrays. ArrayBuffers cannot be read from or written to directly,\r\nbut can be passed to a typed array or DataView Object to interpret the raw\r\nbuffer as needed.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "as",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "as",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "asserts",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "asserts",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "async",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "async",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "await",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "await",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "bigint",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "bigint",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "boolean",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Boolean",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Boolean",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "BooleanConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "break",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "break",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "case",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "case",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "catch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "catch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "class",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "class",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "const",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "const",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "continue",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "continue",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "DataView",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataView",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DataViewConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "Date",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Date",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "DateConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Enables basic storage and retrieval of dates and times.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "debugger",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "debugger",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "declare",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "declare",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "decodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURI",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURI",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "decodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "decodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "encodedURIComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Gets the unencoded version of an encoded component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "encodedURIComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an encoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "default",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "default",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "delete",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "delete",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "do",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "do",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "else",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "else",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "encodeURI",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURI",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uri",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid Uniform Resource Identifier (URI)",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uri",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "encodeURIComponent",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "encodeURIComponent",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "uriComponent",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "|",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Encodes a text string as a valid component of a Uniform Resource Identifier (URI).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "uriComponent",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value representing an unencoded URI component.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "enum",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "enum",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Error",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Error",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "eval",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "eval",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "x",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "any",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Evaluates JavaScript code and executes it.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "x",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A String value that contains valid JavaScript code.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "EvalError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "EvalErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "export",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "export",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "extends",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "extends",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "false",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "false",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "finally",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "finally",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Float32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit float values. The contents are initialized to 0. If the requested number\r\nof bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Float64Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Float64ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 64-bit float values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "for",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "for",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "function",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Function",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Function",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "FunctionConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Creates a new function.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "globalThis",
          "kind": "module",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "globalThis",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "if",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "if",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "implements",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "implements",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "import",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "import",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "in",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "in",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "infer",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "infer",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Infinity",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Infinity",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "instanceof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "instanceof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Int16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit signed integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Int8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Int8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit integer values. The contents are initialized to 0. If the requested\r\nnumber of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "interface",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Intl",
          "kind": "module",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Intl",
              "kind": "moduleName"
            }
          ],
          "documentation": []
        },
        {
          "name": "isFinite",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isFinite",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Determines whether a supplied number is finite.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "Any numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "isNaN",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "isNaN",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "number",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "boolean",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Returns a Boolean value that indicates whether a value is the reserved value NaN (not a number).",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "number",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A numeric value.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "JSON",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "JSON",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides functions to convert JavaScript values to and from the JavaScript Object Notation (JSON) format.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "keyof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "keyof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "let",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "let",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Math",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Math",
              "kind": "localName"
            }
          ],
          "documentation": [
            {
              "text": "An intrinsic object that provides basic mathematics functionality and constants.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "module",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "module",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "namespace",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "namespace",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "NaN",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NaN",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": []
        },
        {
          "name": "never",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "never",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "new",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "new",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "null",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "null",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "number",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "number",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Number",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Number",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "NumberConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "An object that represents a number of any kind. All JavaScript numbers are 64-bit floating-point numbers.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "object",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "object",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Object",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Object",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ObjectConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Provides functionality common to all JavaScript objects.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "package",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "package",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "parseFloat",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseFloat",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to a floating-point number.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string that contains a floating-point number.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "parseInt",
          "kind": "function",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "parseInt",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ",",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "radix",
              "kind": "parameterName"
            },
            {
              "text": "?",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "number",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Converts a string to an integer.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string to convert into a number.",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "radix",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A value between 2 and 36 that specifies the base of the number in `string`.\r\nIf this argument is not supplied, strings with a prefix of '0x' are considered hexadecimal.\r\nAll other strings are considered decimal.",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "RangeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RangeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "readonly",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "readonly",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "ReferenceError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "ReferenceErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "RegExp",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExp",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "RegExpConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "return",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "return",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "satisfies",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "satisfies",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "string",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "string",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "String",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "String",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "StringConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "Allows manipulation and formatting of text strings and determination and location of substrings within strings.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "super",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "super",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "switch",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "switch",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "symbol",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "symbol",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "SyntaxError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "SyntaxErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "this",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "this",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "throw",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "throw",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "true",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "true",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "try",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "try",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "type",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "type",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "TypeError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "TypeErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "typeof",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "typeof",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "Uint16Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint16ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 16-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint32Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint32ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 32-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8Array",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8Array",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer values. The contents are initialized to 0. If the\r\nrequested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "Uint8ClampedArray",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArray",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "Uint8ClampedArrayConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": [
            {
              "text": "A typed array of 8-bit unsigned integer (clamped) values. The contents are initialized to 0.\r\nIf the requested number of bytes could not be allocated an exception is raised.",
              "kind": "text"
            }
          ]
        },
        {
          "name": "undefined",
          "kind": "var",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "undefined",
              "kind": "propertyName"
            }
          ],
          "documentation": []
        },
        {
          "name": "unique",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unique",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "unknown",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "unknown",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "URIError",
          "kind": "var",
          "kindModifiers": "declare",
          "sortText": "15",
          "displayParts": [
            {
              "text": "interface",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": "\n",
              "kind": "lineBreak"
            },
            {
              "text": "var",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIError",
              "kind": "localName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "URIErrorConstructor",
              "kind": "interfaceName"
            }
          ],
          "documentation": []
        },
        {
          "name": "var",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "var",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "void",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "void",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "while",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "while",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "with",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "with",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "yield",
          "kind": "keyword",
          "kindModifiers": "",
          "sortText": "15",
          "displayParts": [
            {
              "text": "yield",
              "kind": "keyword"
            }
          ]
        },
        {
          "name": "escape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "escape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which certain characters have been replaced by a hexadecimal escape sequence.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        },
        {
          "name": "unescape",
          "kind": "function",
          "kindModifiers": "deprecated,declare",
          "sortText": "z15",
          "displayParts": [
            {
              "text": "function",
              "kind": "keyword"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "unescape",
              "kind": "functionName"
            },
            {
              "text": "(",
              "kind": "punctuation"
            },
            {
              "text": "string",
              "kind": "parameterName"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            },
            {
              "text": ")",
              "kind": "punctuation"
            },
            {
              "text": ":",
              "kind": "punctuation"
            },
            {
              "text": " ",
              "kind": "space"
            },
            {
              "text": "string",
              "kind": "keyword"
            }
          ],
          "documentation": [
            {
              "text": "Computes a new string in which hexadecimal escape sequences are replaced with the character that it represents.",
              "kind": "text"
            }
          ],
          "tags": [
            {
              "name": "deprecated",
              "text": [
                {
                  "text": "A legacy feature for browser compatibility",
                  "kind": "text"
                }
              ]
            },
            {
              "name": "param",
              "text": [
                {
                  "text": "string",
                  "kind": "parameterName"
                },
                {
                  "text": " ",
                  "kind": "space"
                },
                {
                  "text": "A string value",
                  "kind": "text"
                }
              ]
            }
          ]
        }
      ]
    }
  }
]