=== tests/cases/conformance/es2022/es2022IntlAPIs.ts ===
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#using_timezonename
const timezoneNames = ['short', 'long', 'shortOffset', 'longOffset', 'shortGeneric', 'longGeneric'] as const;
>timezoneNames : Symbol(timezoneNames, Decl(es2022IntlAPIs.ts, 1, 5))
>const : Symbol(const)

for (const zoneName of timezoneNames) {
>zoneName : Symbol(zoneName, Decl(es2022IntlAPIs.ts, 2, 10))
>timezoneNames : Symbol(timezoneNames, Decl(es2022IntlAPIs.ts, 1, 5))

  var formatter = new Intl.DateTimeFormat('en-US', {
>formatter : Symbol(formatter, Decl(es2022IntlAPIs.ts, 3, 5))
>Intl.DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))
>Intl : Symbol(Intl, Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2018.intl.d.ts, --, --), Decl(lib.es2019.intl.d.ts, --, --), Decl(lib.es2020.bigint.d.ts, --, --) ... and 3 more)
>DateTimeFormat : Symbol(Intl.DateTimeFormat, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --), Decl(lib.es2017.intl.d.ts, --, --), Decl(lib.es2021.intl.d.ts, --, --))

    timeZone: 'America/Los_Angeles',
>timeZone : Symbol(timeZone, Decl(es2022IntlAPIs.ts, 3, 52))

    timeZoneName: zoneName,
>timeZoneName : Symbol(timeZoneName, Decl(es2022IntlAPIs.ts, 4, 36))
>zoneName : Symbol(zoneName, Decl(es2022IntlAPIs.ts, 2, 10))

  });
}

