=== tests/cases/compiler/accessorBodyInTypeContext.ts ===
type A = {
>A : Symbol(A, Decl(accessorBodyInTypeContext.ts, 0, 0))

    get foo() { return 0 }
>foo : Symbol(foo, Decl(accessorBodyInTypeContext.ts, 0, 10))

};

type B = {
>B : Symbol(B, Decl(accessorBodyInTypeContext.ts, 2, 2))

    set foo(v: any) { }
>foo : Symbol(foo, Decl(accessorBodyInTypeContext.ts, 4, 10))
>v : Symbol(v, Decl(accessorBodyInTypeContext.ts, 5, 12))

};

interface X {
>X : Symbol(X, Decl(accessorBodyInTypeContext.ts, 6, 2))

    get foo() { return 0 }
>foo : Symbol(X.foo, Decl(accessorBodyInTypeContext.ts, 8, 13))
}

interface Y {
>Y : Symbol(Y, Decl(accessorBodyInTypeContext.ts, 10, 1))

    set foo(v: any) { }
>foo : Symbol(Y.foo, Decl(accessorBodyInTypeContext.ts, 12, 13))
>v : Symbol(v, Decl(accessorBodyInTypeContext.ts, 13, 12))
}


