/index.ts(1,23): error TS1452: 'resolution-mode' assertions are only supported when `moduleResolution` is `node16` or `nodenext`.
/index.ts(1,23): error TS2688: Cannot find type definition file for 'pkg'.
/index.ts(2,23): error TS1452: 'resolution-mode' assertions are only supported when `moduleResolution` is `node16` or `nodenext`.
/index.ts(2,23): error TS2688: Cannot find type definition file for 'pkg'.
/index.ts(3,1): error TS2304: Cannot find name 'foo'.
/index.ts(4,1): error TS2304: Cannot find name 'bar'.


==== /index.ts (6 errors) ====
    /// <reference types="pkg" resolution-mode="require" />
                          ~~~
!!! error TS1452: 'resolution-mode' assertions are only supported when `moduleResolution` is `node16` or `nodenext`.
                          ~~~
!!! error TS2688: Cannot find type definition file for 'pkg'.
    /// <reference types="pkg" resolution-mode="import" />
                          ~~~
!!! error TS1452: 'resolution-mode' assertions are only supported when `moduleResolution` is `node16` or `nodenext`.
                          ~~~
!!! error TS2688: Cannot find type definition file for 'pkg'.
    foo; // `resolution-mode` is an error in old resolution settings, which resolves is arbitrary
    ~~~
!!! error TS2304: Cannot find name 'foo'.
    bar;
    ~~~
!!! error TS2304: Cannot find name 'bar'.
    export {};
==== /node_modules/pkg/package.json (0 errors) ====
    {
        "name": "pkg",
        "version": "0.0.1",
        "exports": {
            "import": "./import.js",
            "require": "./require.js"
        }
    }
==== /node_modules/pkg/import.d.ts (0 errors) ====
    export {};
    declare global {
        var foo: number;
    }
==== /node_modules/pkg/require.d.ts (0 errors) ====
    export {};
    declare global {
        var bar: number;
    }