=== tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty3.ts ===
declare class Animal {
>Animal : Symbol(Animal, Decl(accessorsOverrideProperty3.ts, 0, 0))

    sound: string
>sound : Symbol(Animal.sound, Decl(accessorsOverrideProperty3.ts, 0, 22))
}
class Lion extends Animal {
>Lion : Symbol(Lion, Decl(accessorsOverrideProperty3.ts, 2, 1))
>Animal : Symbol(Animal, Decl(accessorsOverrideProperty3.ts, 0, 0))

    _sound = 'grrr'
>_sound : Symbol(Lion._sound, Decl(accessorsOverrideProperty3.ts, 3, 27))

    get sound() { return this._sound } // error here
>sound : Symbol(Lion.sound, Decl(accessorsOverrideProperty3.ts, 4, 19), Decl(accessorsOverrideProperty3.ts, 5, 38))
>this._sound : Symbol(Lion._sound, Decl(accessorsOverrideProperty3.ts, 3, 27))
>this : Symbol(Lion, Decl(accessorsOverrideProperty3.ts, 2, 1))
>_sound : Symbol(Lion._sound, Decl(accessorsOverrideProperty3.ts, 3, 27))

    set sound(val) { this._sound = val }
>sound : Symbol(Lion.sound, Decl(accessorsOverrideProperty3.ts, 4, 19), Decl(accessorsOverrideProperty3.ts, 5, 38))
>val : Symbol(val, Decl(accessorsOverrideProperty3.ts, 6, 14))
>this._sound : Symbol(Lion._sound, Decl(accessorsOverrideProperty3.ts, 3, 27))
>this : Symbol(Lion, Decl(accessorsOverrideProperty3.ts, 2, 1))
>_sound : Symbol(Lion._sound, Decl(accessorsOverrideProperty3.ts, 3, 27))
>val : Symbol(val, Decl(accessorsOverrideProperty3.ts, 6, 14))
}

