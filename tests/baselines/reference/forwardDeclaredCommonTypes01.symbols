=== tests/cases/compiler/forwardDeclaredCommonTypes01.ts ===
interface Promise<T> {}
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(forwardDeclaredCommonTypes01.ts, 0, 0))
>T : Symbol(T, Decl(lib.es5.d.ts, --, --), Decl(forwardDeclaredCommonTypes01.ts, 0, 18))

interface Symbol {}
>Symbol : Symbol(Symbol, Decl(lib.es5.d.ts, --, --), Decl(forwardDeclaredCommonTypes01.ts, 0, 23))

interface Map<K, V> {}
>Map : Symbol(Map, Decl(forwardDeclaredCommonTypes01.ts, 1, 19))
>K : Symbol(K, Decl(forwardDeclaredCommonTypes01.ts, 2, 14))
>V : Symbol(V, Decl(forwardDeclaredCommonTypes01.ts, 2, 16))

interface WeakMap<K extends object, V> {}
>WeakMap : Symbol(WeakMap, Decl(forwardDeclaredCommonTypes01.ts, 2, 22))
>K : Symbol(K, Decl(forwardDeclaredCommonTypes01.ts, 3, 18))
>V : Symbol(V, Decl(forwardDeclaredCommonTypes01.ts, 3, 35))

interface Set<T> {}
>Set : Symbol(Set, Decl(forwardDeclaredCommonTypes01.ts, 3, 41))
>T : Symbol(T, Decl(forwardDeclaredCommonTypes01.ts, 4, 14))

interface WeakSet<T extends object> {}
>WeakSet : Symbol(WeakSet, Decl(forwardDeclaredCommonTypes01.ts, 4, 19))
>T : Symbol(T, Decl(forwardDeclaredCommonTypes01.ts, 5, 18))

(function() {
    new Promise;
    new Symbol; Symbol();
    new Map;
    new WeakMap;
    new Set;
    new WeakSet;
});

