=== tests/cases/compiler/a.ts ===
export const key = "a";
>key : Symbol(key, Decl(a.ts, 0, 12))

=== tests/cases/compiler/b.ts ===
import * as a from "./a";
>a : Symbol(a, Decl(b.ts, 0, 6))

export class C {
>C : Symbol(C, Decl(b.ts, 0, 25))

    [a.key]: string;
>[a.key] : Symbol(C[a.key], Decl(b.ts, 1, 16))
>a.key : Symbol(a.key, Decl(a.ts, 0, 12))
>a : Symbol(a, Decl(b.ts, 0, 6))
>key : Symbol(a.key, Decl(a.ts, 0, 12))

    constructor() {
        this[a.key] = "foo";
>this : Symbol(C, Decl(b.ts, 0, 25))
>a.key : Symbol(a.key, Decl(a.ts, 0, 12))
>a : Symbol(a, Decl(b.ts, 0, 6))
>key : Symbol(a.key, Decl(a.ts, 0, 12))
    }
}

