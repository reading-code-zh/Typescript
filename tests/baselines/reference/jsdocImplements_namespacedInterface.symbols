=== /defs.d.ts ===
declare namespace N {
>N : Symbol(N, Decl(defs.d.ts, 0, 0))

    interface A {
>A : Symbol(A, Decl(defs.d.ts, 0, 21))

        mNumber(): number;
>mNumber : Symbol(A.mNumber, Decl(defs.d.ts, 1, 17))
    }
    interface AT<T> {
>AT : Symbol(AT, Decl(defs.d.ts, 3, 5))
>T : Symbol(T, Decl(defs.d.ts, 4, 17))

        gen(): T;
>gen : Symbol(AT.gen, Decl(defs.d.ts, 4, 21))
>T : Symbol(T, Decl(defs.d.ts, 4, 17))
    }
}
=== /a.js ===
/** @implements N.A */
class B {
>B : Symbol(B, Decl(a.js, 0, 0))

    mNumber() {
>mNumber : Symbol(B.mNumber, Decl(a.js, 1, 9))

        return 0;
    }
}
/** @implements {N.AT<string>} */
class BAT {
>BAT : Symbol(BAT, Decl(a.js, 5, 1))

    gen() {
>gen : Symbol(BAT.gen, Decl(a.js, 7, 11))

        return "";
    }
}

