=== tests/cases/compiler/sub.ts ===
export function a() {}
>a : Symbol(a, Decl(sub.ts, 0, 0))

=== tests/cases/compiler/index.ts ===
export const x = add(import("./sub"));
>x : Symbol(x, Decl(index.ts, 0, 12))
>add : Symbol(add, Decl(index.ts, 1, 27))
>"./sub" : Symbol("tests/cases/compiler/sub", Decl(sub.ts, 0, 0))

export * as Q from "./sub";
>Q : Symbol(Q, Decl(index.ts, 1, 6))

declare function add<T>(x: Promise<T>): T;
>add : Symbol(add, Decl(index.ts, 1, 27))
>T : Symbol(T, Decl(index.ts, 2, 21))
>x : Symbol(x, Decl(index.ts, 2, 24))
>Promise : Symbol(Promise, Decl(lib.es5.d.ts, --, --), Decl(lib.es2015.iterable.d.ts, --, --), Decl(lib.es2015.promise.d.ts, --, --), Decl(lib.es2015.symbol.wellknown.d.ts, --, --), Decl(lib.es2018.promise.d.ts, --, --))
>T : Symbol(T, Decl(index.ts, 2, 21))
>T : Symbol(T, Decl(index.ts, 2, 21))

