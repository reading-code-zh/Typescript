=== /some-mod.d.ts ===
interface Item {
>Item : Symbol(Item, Decl(some-mod.d.ts, 0, 0))

    x: string;
>x : Symbol(Item.x, Decl(some-mod.d.ts, 0, 16))
}
declare const items: Item[];
>items : Symbol(items, Decl(some-mod.d.ts, 3, 13))
>Item : Symbol(Item, Decl(some-mod.d.ts, 0, 0))

export = items;
>items : Symbol(items, Decl(some-mod.d.ts, 3, 13))

=== tests/cases/conformance/jsdoc/declarations/index.js ===
/** @type {typeof import("/some-mod")} */
const items = [];
>items : Symbol(items, Decl(index.js, 1, 5))

module.exports = items;
>module.exports : Symbol(module.exports, Decl(index.js, 0, 0))
>module : Symbol(export=, Decl(index.js, 1, 17))
>exports : Symbol(export=, Decl(index.js, 1, 17))
>items : Symbol(items, Decl(index.js, 1, 5))

