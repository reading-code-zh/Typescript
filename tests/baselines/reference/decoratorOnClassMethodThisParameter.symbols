=== tests/cases/conformance/decorators/class/method/parameter/decoratorOnClassMethodThisParameter.ts ===
declare function dec(target: Object, propertyKey: string | symbol, parameterIndex: number): void;
>dec : Symbol(dec, Decl(decoratorOnClassMethodThisParameter.ts, 0, 0))
>target : Symbol(target, Decl(decoratorOnClassMethodThisParameter.ts, 0, 21))
>Object : Symbol(Object, Decl(lib.es5.d.ts, --, --), Decl(lib.es5.d.ts, --, --))
>propertyKey : Symbol(propertyKey, Decl(decoratorOnClassMethodThisParameter.ts, 0, 36))
>parameterIndex : Symbol(parameterIndex, Decl(decoratorOnClassMethodThisParameter.ts, 0, 66))

class C {
>C : Symbol(C, Decl(decoratorOnClassMethodThisParameter.ts, 0, 97))

    method(@dec this: C) {}
>method : Symbol(C.method, Decl(decoratorOnClassMethodThisParameter.ts, 2, 9))
>dec : Symbol(dec, Decl(decoratorOnClassMethodThisParameter.ts, 0, 0))
>this : Symbol(this, Decl(decoratorOnClassMethodThisParameter.ts, 3, 11))
>C : Symbol(C, Decl(decoratorOnClassMethodThisParameter.ts, 0, 97))
}

class C2 {
>C2 : Symbol(C2, Decl(decoratorOnClassMethodThisParameter.ts, 4, 1))

    method(@dec allowed: C2, @dec this: C2) {}
>method : Symbol(C2.method, Decl(decoratorOnClassMethodThisParameter.ts, 6, 10))
>dec : Symbol(dec, Decl(decoratorOnClassMethodThisParameter.ts, 0, 0))
>allowed : Symbol(allowed, Decl(decoratorOnClassMethodThisParameter.ts, 7, 11))
>C2 : Symbol(C2, Decl(decoratorOnClassMethodThisParameter.ts, 4, 1))
>dec : Symbol(dec, Decl(decoratorOnClassMethodThisParameter.ts, 0, 0))
>this : Symbol(this, Decl(decoratorOnClassMethodThisParameter.ts, 7, 28))
>C2 : Symbol(C2, Decl(decoratorOnClassMethodThisParameter.ts, 4, 1))
}
