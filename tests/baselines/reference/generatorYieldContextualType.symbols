=== tests/cases/conformance/generators/generatorYieldContextualType.ts ===
declare function f1<T, R, S>(gen: () => Generator<R, T, S>): void;
>f1 : Symbol(f1, Decl(generatorYieldContextualType.ts, 0, 0))
>T : Symbol(T, Decl(generatorYieldContextualType.ts, 0, 20))
>R : Symbol(R, Decl(generatorYieldContextualType.ts, 0, 22))
>S : Symbol(S, Decl(generatorYieldContextualType.ts, 0, 25))
>gen : Symbol(gen, Decl(generatorYieldContextualType.ts, 0, 29))
>Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --))
>R : Symbol(R, Decl(generatorYieldContextualType.ts, 0, 22))
>T : Symbol(T, Decl(generatorYieldContextualType.ts, 0, 20))
>S : Symbol(S, Decl(generatorYieldContextualType.ts, 0, 25))

f1<0, 0, 1>(function* () {
>f1 : Symbol(f1, Decl(generatorYieldContextualType.ts, 0, 0))

	const a = yield 0;
>a : Symbol(a, Decl(generatorYieldContextualType.ts, 2, 6))

	return 0;
});

declare function f2<T, R, S>(gen: () => Generator<R, T, S> | AsyncGenerator<R, T, S>): void;
>f2 : Symbol(f2, Decl(generatorYieldContextualType.ts, 4, 3))
>T : Symbol(T, Decl(generatorYieldContextualType.ts, 6, 20))
>R : Symbol(R, Decl(generatorYieldContextualType.ts, 6, 22))
>S : Symbol(S, Decl(generatorYieldContextualType.ts, 6, 25))
>gen : Symbol(gen, Decl(generatorYieldContextualType.ts, 6, 29))
>Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --))
>R : Symbol(R, Decl(generatorYieldContextualType.ts, 6, 22))
>T : Symbol(T, Decl(generatorYieldContextualType.ts, 6, 20))
>S : Symbol(S, Decl(generatorYieldContextualType.ts, 6, 25))
>AsyncGenerator : Symbol(AsyncGenerator, Decl(lib.es2018.asyncgenerator.d.ts, --, --))
>R : Symbol(R, Decl(generatorYieldContextualType.ts, 6, 22))
>T : Symbol(T, Decl(generatorYieldContextualType.ts, 6, 20))
>S : Symbol(S, Decl(generatorYieldContextualType.ts, 6, 25))

f2<0, 0, 1>(async function* () {
>f2 : Symbol(f2, Decl(generatorYieldContextualType.ts, 4, 3))

	const a = yield 0;
>a : Symbol(a, Decl(generatorYieldContextualType.ts, 8, 6))

	return 0;
});
