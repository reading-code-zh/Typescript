=== tests/cases/compiler/consumer.ts ===
import Drawing = require('./Drawing');
>Drawing : typeof Drawing

var addr = new Drawing.Math.Adder();
>addr : import("tests/cases/compiler/Math/Adder")
>new Drawing.Math.Adder() : import("tests/cases/compiler/Math/Adder")
>Drawing.Math.Adder : typeof import("tests/cases/compiler/Math/Adder")
>Drawing.Math : { Adder: typeof import("tests/cases/compiler/Math/Adder"); }
>Drawing : typeof Drawing
>Math : { Adder: typeof import("tests/cases/compiler/Math/Adder"); }
>Adder : typeof import("tests/cases/compiler/Math/Adder")

=== tests/cases/compiler/Drawing.ts ===
export import Math = require('./Math/Math')
>Math : { Adder: typeof import("tests/cases/compiler/Math/Adder"); }

=== tests/cases/compiler/Math/Math.ts ===
import Adder = require('./Adder');
>Adder : typeof Adder

var Math = {
>Math : { Adder: typeof Adder; }
>{    Adder:Adder} : { Adder: typeof Adder; }

    Adder:Adder
>Adder : typeof Adder
>Adder : typeof Adder

};

export = Math
>Math : { Adder: typeof Adder; }

=== tests/cases/compiler/Math/Adder.ts ===
class Adder {
>Adder : Adder

    add(a: number, b: number) {
>add : (a: number, b: number) => void
>a : number
>b : number
        
    }
}

export = Adder;
>Adder : Adder

