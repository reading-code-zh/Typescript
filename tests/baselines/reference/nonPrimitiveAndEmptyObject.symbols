=== tests/cases/conformance/types/nonPrimitive/nonPrimitiveAndEmptyObject.ts ===
// Repro from #49480

export interface BarProps {
>BarProps : Symbol(BarProps, Decl(nonPrimitiveAndEmptyObject.ts, 0, 0))

    barProp?: string;
>barProp : Symbol(BarProps.barProp, Decl(nonPrimitiveAndEmptyObject.ts, 2, 27))
}

export interface FooProps {
>FooProps : Symbol(FooProps, Decl(nonPrimitiveAndEmptyObject.ts, 4, 1))

    fooProps?: BarProps & object;
>fooProps : Symbol(FooProps.fooProps, Decl(nonPrimitiveAndEmptyObject.ts, 6, 27))
>BarProps : Symbol(BarProps, Decl(nonPrimitiveAndEmptyObject.ts, 0, 0))
}

declare const foo: FooProps;
>foo : Symbol(foo, Decl(nonPrimitiveAndEmptyObject.ts, 10, 13))
>FooProps : Symbol(FooProps, Decl(nonPrimitiveAndEmptyObject.ts, 4, 1))

const { fooProps = {} } = foo;
>fooProps : Symbol(fooProps, Decl(nonPrimitiveAndEmptyObject.ts, 11, 7))
>foo : Symbol(foo, Decl(nonPrimitiveAndEmptyObject.ts, 10, 13))

fooProps.barProp;
>fooProps.barProp : Symbol(BarProps.barProp, Decl(nonPrimitiveAndEmptyObject.ts, 2, 27))
>fooProps : Symbol(fooProps, Decl(nonPrimitiveAndEmptyObject.ts, 11, 7))
>barProp : Symbol(BarProps.barProp, Decl(nonPrimitiveAndEmptyObject.ts, 2, 27))

