=== tests/cases/conformance/additionalChecks/noPropertyAccessFromIndexSignature1.ts ===
interface A {
>A : Symbol(A, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 0))

    foo: string
>foo : Symbol(A.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 13))
}

interface B {
>B : Symbol(B, Decl(noPropertyAccessFromIndexSignature1.ts, 2, 1))

    [k: string]: string
>k : Symbol(k, Decl(noPropertyAccessFromIndexSignature1.ts, 5, 5))
}

interface C {
>C : Symbol(C, Decl(noPropertyAccessFromIndexSignature1.ts, 6, 1))

    foo: string
>foo : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))

    [k: string]: string
>k : Symbol(k, Decl(noPropertyAccessFromIndexSignature1.ts, 10, 5))
}

declare const a: A;
>a : Symbol(a, Decl(noPropertyAccessFromIndexSignature1.ts, 13, 13))
>A : Symbol(A, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 0))

declare const b: B;
>b : Symbol(b, Decl(noPropertyAccessFromIndexSignature1.ts, 14, 13))
>B : Symbol(B, Decl(noPropertyAccessFromIndexSignature1.ts, 2, 1))

declare const c: C;
>c : Symbol(c, Decl(noPropertyAccessFromIndexSignature1.ts, 15, 13))
>C : Symbol(C, Decl(noPropertyAccessFromIndexSignature1.ts, 6, 1))

declare const d: C | undefined;
>d : Symbol(d, Decl(noPropertyAccessFromIndexSignature1.ts, 16, 13))
>C : Symbol(C, Decl(noPropertyAccessFromIndexSignature1.ts, 6, 1))

// access property
a.foo;
>a.foo : Symbol(A.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 13))
>a : Symbol(a, Decl(noPropertyAccessFromIndexSignature1.ts, 13, 13))
>foo : Symbol(A.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 13))

a["foo"]
>a : Symbol(a, Decl(noPropertyAccessFromIndexSignature1.ts, 13, 13))
>"foo" : Symbol(A.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 0, 13))

// access index signature
b.foo;
>b.foo : Symbol(B.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 4, 13))
>b : Symbol(b, Decl(noPropertyAccessFromIndexSignature1.ts, 14, 13))
>foo : Symbol(B.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 4, 13))

b["foo"];
>b : Symbol(b, Decl(noPropertyAccessFromIndexSignature1.ts, 14, 13))

// access property
c.foo;
>c.foo : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))
>c : Symbol(c, Decl(noPropertyAccessFromIndexSignature1.ts, 15, 13))
>foo : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))

c["foo"]
>c : Symbol(c, Decl(noPropertyAccessFromIndexSignature1.ts, 15, 13))
>"foo" : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))

// access index signature
c.bar;
>c.bar : Symbol(C.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 9, 15))
>c : Symbol(c, Decl(noPropertyAccessFromIndexSignature1.ts, 15, 13))
>bar : Symbol(C.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 9, 15))

c["bar"];
>c : Symbol(c, Decl(noPropertyAccessFromIndexSignature1.ts, 15, 13))

// optional access property
d?.foo;
>d?.foo : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))
>d : Symbol(d, Decl(noPropertyAccessFromIndexSignature1.ts, 16, 13))
>foo : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))

d?.["foo"]
>d : Symbol(d, Decl(noPropertyAccessFromIndexSignature1.ts, 16, 13))
>"foo" : Symbol(C.foo, Decl(noPropertyAccessFromIndexSignature1.ts, 8, 13))

// optional access index signature
d?.bar;
>d?.bar : Symbol(C.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 9, 15))
>d : Symbol(d, Decl(noPropertyAccessFromIndexSignature1.ts, 16, 13))
>bar : Symbol(C.__index, Decl(noPropertyAccessFromIndexSignature1.ts, 9, 15))

d?.["bar"];
>d : Symbol(d, Decl(noPropertyAccessFromIndexSignature1.ts, 16, 13))

