=== tests/cases/conformance/classes/members/privateNames/privateNamesUnique-3.ts ===
class A {
>A : Symbol(A, Decl(privateNamesUnique-3.ts, 0, 0))

    #foo = 1;
>#foo : Symbol(A.#foo, Decl(privateNamesUnique-3.ts, 0, 9))

    static #foo = true; // error (duplicate)
>#foo : Symbol(A.#foo, Decl(privateNamesUnique-3.ts, 1, 13))

                        // because static and instance private names
                        // share the same lexical scope
                        // https://tc39.es/proposal-class-fields/#prod-ClassBody
}
class B {
>B : Symbol(B, Decl(privateNamesUnique-3.ts, 6, 1))

    static #foo = true;
>#foo : Symbol(B.#foo, Decl(privateNamesUnique-3.ts, 7, 9))

    test(x: B) {
>test : Symbol(B.test, Decl(privateNamesUnique-3.ts, 8, 23))
>x : Symbol(x, Decl(privateNamesUnique-3.ts, 9, 9))
>B : Symbol(B, Decl(privateNamesUnique-3.ts, 6, 1))

        x.#foo; // error (#foo is a static property on B, not an instance property)
>x : Symbol(x, Decl(privateNamesUnique-3.ts, 9, 9))
    }
}

