=== tests/cases/conformance/salsa/a.js ===
/** @type {number | undefined} */
var n;
>n : Symbol(n, Decl(a.js, 1, 3))

// should get any on parameter initialisers
function f(a = null, b = n, l = []) {
>f : Symbol(f, Decl(a.js, 1, 6))
>a : Symbol(a, Decl(a.js, 4, 11))
>b : Symbol(b, Decl(a.js, 4, 20))
>n : Symbol(n, Decl(a.js, 1, 3))
>l : Symbol(l, Decl(a.js, 4, 27))

    // a should be any
    a = undefined
>a : Symbol(a, Decl(a.js, 4, 11))
>undefined : Symbol(undefined)

    a = null
>a : Symbol(a, Decl(a.js, 4, 11))

    a = 1
>a : Symbol(a, Decl(a.js, 4, 11))

    a = true
>a : Symbol(a, Decl(a.js, 4, 11))

    a = {}
>a : Symbol(a, Decl(a.js, 4, 11))

    a = 'ok'
>a : Symbol(a, Decl(a.js, 4, 11))

    // b should be number | undefined, not any
    b = 1
>b : Symbol(b, Decl(a.js, 4, 20))

    b = undefined
>b : Symbol(b, Decl(a.js, 4, 20))
>undefined : Symbol(undefined)

    b = 'error'
>b : Symbol(b, Decl(a.js, 4, 20))

    // l should be any[]
    l.push(1)
>l.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>l : Symbol(l, Decl(a.js, 4, 27))
>push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))

    l.push('ok')
>l.push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
>l : Symbol(l, Decl(a.js, 4, 27))
>push : Symbol(Array.push, Decl(lib.es5.d.ts, --, --))
}

