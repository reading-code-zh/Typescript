=== tests/cases/compiler/contextualTypeOnYield1.ts ===
type FuncOrGeneratorFunc = () => (number | Generator<(arg: number) => void, any, void>)
>FuncOrGeneratorFunc : Symbol(FuncOrGeneratorFunc, Decl(contextualTypeOnYield1.ts, 0, 0))
>Generator : Symbol(Generator, Decl(lib.es2015.generator.d.ts, --, --))
>arg : Symbol(arg, Decl(contextualTypeOnYield1.ts, 0, 54))

const f: FuncOrGeneratorFunc = function*() {
>f : Symbol(f, Decl(contextualTypeOnYield1.ts, 2, 5))
>FuncOrGeneratorFunc : Symbol(FuncOrGeneratorFunc, Decl(contextualTypeOnYield1.ts, 0, 0))

  yield (num) => console.log(num); // `num` should be inferred to have type `number`.
>num : Symbol(num, Decl(contextualTypeOnYield1.ts, 3, 9))
>console.log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
>console : Symbol(console, Decl(lib.dom.d.ts, --, --))
>log : Symbol(Console.log, Decl(lib.dom.d.ts, --, --))
>num : Symbol(num, Decl(contextualTypeOnYield1.ts, 3, 9))
}
