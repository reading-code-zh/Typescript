=== tests/cases/compiler/exportNamespaceDeclarationRetainsVisibility.ts ===
namespace X {
>X : Symbol(X, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 0, 0))

    interface A {
>A : Symbol(A, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 0, 13))

        kind: 'a';
>kind : Symbol(A.kind, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 1, 17))
    }

    interface B {
>B : Symbol(B, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 3, 5))

        kind: 'b';
>kind : Symbol(B.kind, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 5, 17))
    }

    export type C = A | B;
>C : Symbol(C, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 7, 5))
>A : Symbol(A, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 0, 13))
>B : Symbol(B, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 3, 5))
}

export = X;
>X : Symbol(X, Decl(exportNamespaceDeclarationRetainsVisibility.ts, 0, 0))

