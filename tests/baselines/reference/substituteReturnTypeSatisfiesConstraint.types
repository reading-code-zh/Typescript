=== tests/cases/compiler/substituteReturnTypeSatisfiesConstraint.ts ===
type M = { p: string };
>M : { p: string; }
>p : string

type O = { m: () => M };
>O : { m: () => M; }
>m : () => M

type X<T extends M> = T;
>X : T

type FFG<T> = T extends O ? X<ReturnType<T['m']>> : never; // error!
>FFG : FFG<T>

