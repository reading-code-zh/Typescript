tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts(4,14): error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts(5,11): error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts(6,11): error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts(7,20): error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts(9,11): error TS2803: Cannot assign to private method '#method'. Private methods are not writable.


==== tests/cases/conformance/classes/members/privateNames/privateNameMethodAssignment.ts (5 errors) ====
    class A3 {
        #method() { };
        constructor(a: A3, b: any) {
            this.#method = () => {} // Error, not writable 
                 ~~~~~~~
!!! error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
            a.#method = () => { }; // Error, not writable 
              ~~~~~~~
!!! error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
            b.#method =  () => { } //Error, not writable 
              ~~~~~~~
!!! error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
            ({ x: this.#method } = { x: () => {}}); //Error, not writable 
                       ~~~~~~~
!!! error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
            let x = this.#method;
            b.#method++ //Error, not writable 
              ~~~~~~~
!!! error TS2803: Cannot assign to private method '#method'. Private methods are not writable.
        }
    }
    